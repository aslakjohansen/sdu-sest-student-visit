# Start

## Introduktion

Velkommen til en rejse igennem programmeringssproget [Elixir](https://elixir-lang.org)'s landskab. Elixir er et sprog der er designet til at bygge kritiske produktionssystemer. Det er [funktionsorienteret](https://en.wikipedia.org/wiki/Functional_programming) og benytter [actor modellen](https://en.wikipedia.org/wiki/Actor_model). Hvad betyder dette?

* **Funktionsorienteret:** Dette er et programmeringsparadigme (en måde at tilgå programmeringsopgaver på). På SDUs software uddannelser (og det Danske arbejdsmarket) er det dét objektorienterede paradigme der dominerer.
* **Actormodellen:** Dette er nok den model der gør det lettest at arbejde med samtidighed (en: concurrency) i software.

<!-- livebook:{"break_markdown":true} -->

Vi kommer til at arbejde med Elixir igennem [Livebook](https://livebook.dev). Der er andre måder at skrive Elixirkode (hvor man ikke benytter en browser), men denne har nogle attraktive muligheder med hensyn til at få et overblik over hvad der foregår og til at visualisere data.

Først skal Livebook [installeres](https://livebook.dev/\#install), og dernæst skal den konfiureres:

1. Åben hovedsiden i en ny tab. Det kan gøres via Livebook logoet øverst til venstre.
2. Klik i denne tab på `Settings` i menyen til vestre.
3. Under `Code editor` skal `Render ligatures` slås til.

<!-- livebook:{"break_markdown":true} -->

Herefter skal du vælge én af tre sværhedsgrader:

1. **Beginner:** Hvis du aldrig har programmeret før starter du [her](beginner.livemd).
2. **Intermediate:** Hvis du føler at du har lidt erfaring med at programmere men godt vil have lidt støttehjul til et sprog du ikke har set før, så skal du beslutte om du hopper på [begynder sporet](beginner.livemd) eller det [avancerede spor](intermediate.livemd).
3. **Advanced:** Hvis du føler at du har godt styr på mindst ét programmeringssprog, så starter du [her](advanced.livemd).

<!-- livebook:{"break_markdown":true} -->

Dette valg sender jer igennem følgende materiale:

<!-- livebook:{"break_markdown":true} -->

<!-- Learn more at https://mermaid-js.github.io/mermaid -->

```mermaid
%%{init: {"flowchart": {"htmlLabels": false}} }%%
graph TD;
  Beginner1["`**Begynder 1:**
Værdier, tupler og pattern matching`"];
  Beginner2["`**Begynder 2:**
Booleans, if, strenge og case`"];
  Beginner3["`**Begynder 3:**
Funktioner`"];
  Beginner4["`**Begynder 4:**
Lister, højereordensfunktioner, pipelining og moduler`"];
  Beginner5["`**Begynder 5:**
Maps`"];
  Beginner6["`**Begynder 6:**
Farver`"];
  
  Advanced1["`**Avanceret 1:**
Cirkler`"];
  Advanced2["`**Avanceret 2:**
Fibonacci sekvensen`"];
  Advanced3["`**Avanceret 3:**
Concurrency`"];
  
  Start-->Beginner1-->Beginner2-->Beginner3-->Beginner4-->Beginner5-->Beginner6-->Advanced1;
  Start-->Advanced1-->Advanced2-->Advanced3;
```

<!-- livebook:{"break_markdown":true} -->

Hvis dette er interessant for jer, så kan I se noget livecoding med José Valim (skaberen af Elixir) [her](https://www.youtube.com/watch?v=mDxJjqx5-ns&list=PLNP8vc86_-SOV1ZEvX_q9BLYWL586zWnF).
